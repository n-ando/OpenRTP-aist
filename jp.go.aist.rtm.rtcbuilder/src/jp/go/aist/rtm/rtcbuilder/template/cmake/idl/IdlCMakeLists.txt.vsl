set(idls ${tmpltHelper.getIDLFilesforIDLCMake(${rtcParam})})

macro(_IDL_OUTPUTS _idl _dir _result)
    set(${dol}{_result} ${dol}{_dir}/${dol}{_idl}Skel.cpp ${dol}{_dir}/${dol}{_idl}Skel.h)
endmacro(_IDL_OUTPUTS)

macro(_COMPILE_IDL _idl_file)

    get_filename_component(_idl ${dol}{_idl_file} NAME_WE)
    set(_idl_srcs_var ${dol}{_idl}_SRCS)
    _IDL_OUTPUTS(${dol}{_idl} ${dol}{CMAKE_CURRENT_BINARY_DIR} ${dol}{_idl_srcs_var})

    if(WIN32)
        set(_python_command "python")
    else(WIN32)
        set(_python_command "python3")
    endif(WIN32)

    add_custom_command(OUTPUT ${dol}{${dol}{_idl_srcs_var}}
        COMMAND ${dol}{_python_command} ${dol}{OPENRTM_DIR}/bin/${dol}{OPENRTM_IDL_WRAPPER} ${dol}{OPENRTM_IDL_WRAPPER_FLAGS} --idl-file=${dol}{_idl}.idl
        COMMAND ${dol}{OPENRTM_IDLC} ${dol}{OPENRTM_IDLFLAGS} ${dol}{_idl_file}
        WORKING_DIRECTORY ${dol}{CURRENT_BINARY_DIR}
        DEPENDS ${dol}{_idl_file}
        COMMENT "Compiling ${dol}{_idl_file}" VERBATIM)
    add_custom_target(${dol}{_idl}_TGT DEPENDS ${dol}{${dol}{_idl_srcs_var}})
    set(ALL_IDL_SRCS ${dol}{ALL_IDL_SRCS} ${dol}{${dol}{_idl_srcs_var}})
    if(NOT TARGET ALL_IDL_TGT)
        add_custom_target(ALL_IDL_TGT)
    endif(NOT TARGET ALL_IDL_TGT)
    add_dependencies(ALL_IDL_TGT ${dol}{_idl}_TGT)
endmacro(_COMPILE_IDL)

${sharp} Module exposed to the user
macro(OPENRTM_COMPILE_IDL_FILES)
    foreach(idl ${dol}{ARGN})
        _COMPILE_IDL(${dol}{idl})
    endforeach(idl)
endmacro(OPENRTM_COMPILE_IDL_FILES)


OPENRTM_COMPILE_IDL_FILES(${dol}{idls})
set(ALL_IDL_SRCS ${dol}{ALL_IDL_SRCS} PARENT_SCOPE)
FILTER_LIST("ALL_IDL_SRCS" "hh${dol}" idl_headers)
